<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<context:component-scan base-package="com.mindone, egovframework" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!-- <bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="egovframework.example.cmmn.web.EgovBindingInitializer" />
		</property>
	</bean> -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
			</list>
		</property>
	</bean>

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
	<!-- 쿠키를 이용한 Locale 이용시 <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/> -->
	<bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="language" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="cmmn/egovError" />
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.dao.DataAccessException">cmmn/dataAccessFailure</prop>
				<prop key="org.springframework.transaction.TransactionException">cmmn/transactionFailure</prop>
				<prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmmn/egovError</prop>
				<prop key="org.springframework.security.AccessDeniedException">cmmn/egovError</prop>
			</props>
		</property>
	</bean>

	<!-- 화면 처리용 JSP 파일명의 prefix, suffix 처리에 대한 설정 -->
	<!-- 뷰 리졸버 : 뷰 이름으로부터 사용할 뷰 오브젝트를 찾아준다. -->
	<!-- 뷰 리졸버를 빈으로 등록하지 않는다면 DispatcherServlet 의 디폴트 뷰 리졸버인 InternalResourceViewResolver(ViewResolver 
		를 상속받음. -->
	<!-- 0주로 JSP를 뷰로 사용하고자 할 때 사용) 가 사용된다. -->
	<!-- UrlBasedViewResolver : ViewResolver 의 구현체로 특별한 매핑 정보 없이 의미상 view 이름을 
		URL 로 사용. -->
	<!-- View 이름과 View 자원과의 이름이 같을 때 사용. -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0" id="beanNameViewResolver" />
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:order="1" p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="2" p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/views/" p:suffix=".jsp" />

	<!-- JsonView Setting -->
	<!-- Ajax 통신을 위해 JsonView 설정이 필요하다. -->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="application/json;charset=UTF-8"> </property>
	</bean>

	<!-- For Pagination Tag -->
	<!-- <bean id="imageRenderer"
		class="egovframework.example.cmmn.web.EgovImgPaginationRenderer" /> -->

	<!-- <bean id="paginationManager"
		class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
		<property name="rendererType">
			<map>
				<entry key="image" value-ref="imageRenderer" />
			</map>
		</property>
	</bean> -->
	<!-- /For Pagination Tag -->

	<!-- 웹에서 파일 업로드는 일반적으로 'multipart/form-data' 라는 방식으로 데이터를 전송한다. -->
	<!-- Spring MVC 에서 파일 업로드를 처리하기 위해 파일 업로드로 들어오는 데이터를 처리하는 multipartResolver 
		객체가 필요하다. -->
	<!-- Multipart 로 구성된 데이터의 처리는 multipartResolver 가 처리하며, 개발자는 컨트롤러로 들어오는 
		데이터에 대한 처리만을 진행하면된다. -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" /> <!-- 104857600 : 약 100M -->
	</bean>
	<!-- jsonView 설정 -->
	<bean id="beanNameResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>
	<!-- jsonView 설정 끝 -->

	<mvc:view-controller path="/cmmn/validator.do"
		view-name="cmmn/validator" />


	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/login/**" />
			<bean class="com.mindone.okch.cmmn.interceptor.LoginCheckInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->

</beans>